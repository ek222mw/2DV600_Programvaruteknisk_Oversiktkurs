package Fraction;

public class Fraction {
	
	private int numerator;
	private int denominator;
	
	Fraction(int n, int d)
	{
		numerator = n;
		denominator = d;
	}
	
	public int getNumerator()
	{
		
		
		
		return numerator;
		
	}
	
	public int getDenominator()
	{
		
		
		return denominator;
	}
	
	public boolean isNegative(Fraction frac)
	{
		
		
		
		
		return false;
		
	}
	
	public double add(int n, int d)
	{
		double numi = ((denominator * n) + (numerator * d));
		double deno = (denominator * d);
		
		return (numi/deno);
		
	}
	
	public double subtract(int n, int d)
	{
		
		double deno = (denominator * d);
		double numi = ((numerator * d) - (denominator * n));
		
		return (numi/deno);
		
	}
	
	public double multiply(int n, int d)
	{
		double deno = denominator * d;
		double numi = numerator * n;
		
		return (numi/deno);
		
	}
	
	public double divide(int n, int d)
	{
		
		double deno = denominator * n;
		double numi = numerator * d;
		
		return (numi/deno);
		
	}
	
	public boolean isEqualTo(Fraction frac1, Fraction frac2)
	{
		double comp1 = (frac1.getNumerator() / frac1.getDenominator());
		double comp2 = (frac2.getNumerator() / frac2.getDenominator());
		if(comp1 == comp2)
		{
			return true;
		}
		
		
		
		return false;
		
	}
	
	public static String toString(double nd)
	{
		
		String NDstring = "The ND number is: "+ nd;
		
		return NDstring;
		
	}

}
